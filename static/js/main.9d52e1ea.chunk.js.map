{"version":3,"sources":["ReactContact.js","App.js","reportWebVitals.js","index.js"],"names":["ReactContact","name","value","useState","email","phone","address","message","user","setUser","getUserData","event","target","postData","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","alert","className","type","placeholder","autocomplete","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAoGeA,EAlGK,WACnB,IAQIC,EAAMC,EARV,EAAwBC,mBAAS,CAChCF,KAAK,GACLG,MAAM,GACNC,MAAM,GACNC,QAAQ,GACRC,QAAQ,KALT,mBAAOC,EAAP,KAAaC,EAAb,KASMC,EAAa,SAACC,GACnBV,EAAKU,EAAMC,OAAOX,KAClBC,EAAMS,EAAMC,OAAOV,MAEnBO,EAAQ,2BAAID,GAAL,kBAAYP,EAAMC,MAEpBW,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,yDAChBD,EAAEE,iBAEMf,EAAyCO,EAAzCP,KAAMG,EAAmCI,EAAnCJ,MAAOC,EAA4BG,EAA5BH,MAAOC,EAAqBE,EAArBF,QAASC,EAAYC,EAAZD,UAElCN,GAAQG,GAASC,GAASC,GAAWC,GALxB,gCAMGU,MAAM,0EACpB,CACCC,OAAO,OACPC,QAAQ,CACP,eAAe,oBAEhBC,KAAKC,KAAKC,UAAU,CACtBrB,OACAG,QACAC,QACAC,UACAC,cAjBY,gBAsBZE,EAAQ,CACVR,KAAK,GACLG,MAAM,GACNC,MAAM,GACNC,QAAQ,GACRC,QAAQ,KAGTgB,MAAM,6BA9BS,uBAiCfA,MAAM,4BAjCS,4CAAH,sDAqCd,OACE,mCACC,qBAAKC,UAAU,YAAf,SACC,sBAAKA,UAAU,eAAf,UACC,uEACA,uBAAMN,OAAO,OAAb,UACC,sBAAKM,UAAU,aAAf,UACC,yCACA,uBAAOC,KAAK,OAAOxB,KAAK,OAAOC,MAAOM,EAAKP,KAAMyB,YAAY,kBAAkBC,aAAa,MAAMC,SAAUlB,IAC5G,sBAAMc,UAAU,mBAGjB,sBAAKA,UAAU,aAAf,UACC,0CACA,uBAAOC,KAAK,OAAOxB,KAAK,QAAQC,MAAOM,EAAKJ,MAAOsB,YAAY,mBAAmBC,aAAa,MAAMC,SAAUlB,IAC/G,sBAAMc,UAAU,mBAGjB,sBAAKA,UAAU,aAAf,UACC,8CACA,uBAAOC,KAAK,OAAOxB,KAAK,QAAQC,MAAOM,EAAKH,MAAOqB,YAAY,sBAAsBC,aAAa,MAAMC,SAAUlB,IAClH,sBAAMc,UAAU,mBAGjB,sBAAKA,UAAU,aAAf,UACC,4CACA,uBAAOC,KAAK,OAAOxB,KAAK,UAAUC,MAAOM,EAAKF,QAASoB,YAAY,qBAAqBC,aAAa,MAAMC,SAAUlB,IACrH,sBAAMc,UAAU,mBAGjB,sBAAKA,UAAU,sBAAf,UACC,4CACA,0BAAUvB,KAAK,UAAUC,MAAOM,EAAKD,QAAUmB,YAAY,qBAAqBC,aAAa,MAAMC,SAAUlB,IAC7G,sBAAMc,UAAU,mBAGjB,wBAAQK,QAAShB,EAAjB,+BC/EQiB,MARf,WACE,OACC,mCACG,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d52e1ea.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nconst ReactContact =()=>{\n\tconst [user, setUser] = useState({\n\t\tname:'',\n\t\temail:'',\n\t\tphone:'',\n\t\taddress:'',\n\t\tmessage:'',\n\t});\n\n\tlet name, value;\n\tconst getUserData =(event)=>{\n\t\tname=event.target.name;\n\t\tvalue=event.target.value;\n\n\t\tsetUser({...user, [name]:value});\n\t}\n\tconst postData = async (e)=>{\n\t\te.preventDefault();\n\n\t\tconst { name, email, phone, address, message } = user;\n\n\t\tif(name && email && phone && address && message){\n\t\t\tconst res = await fetch(\"https://reactyobetubeform-default-rtdb.firebaseio.com/yobetubeform.json\",\n\t    \t\t{\n\t    \t\t\tmethod:'POST',\n\t    \t\t\theaders:{\n\t    \t\t\t\t\"Content-Type\":\"application/json\",\n\t    \t\t\t},\n\t    \t\t\tbody:JSON.stringify({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tphone,\n\t\t\t\t\t\taddress,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t}),\n\t    \t\t}\n\t    \t);\n\t    if(res){\n\t    \tsetUser({\n\t\t\t\tname:'',\n\t\t\t\temail:'',\n\t\t\t\tphone:'',\n\t\t\t\taddress:'',\n\t\t\t\tmessage:'',\n\t\t\t});\n\n\t\t\talert(\"Data Stored Successfully\");\n\t    }\n\t\t}else{\n\t\t\talert('please fill all the data');\n\t\t}\n\t    \n\t};\n\treturn(\n\t\t\t<>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"wrap_contact\">\n\t\t\t\t\t\t<h1>Contact Us form Connect With firebase</h1>\n\t\t\t\t\t\t<form method=\"POST\">\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"name\" value={user.name} placeholder=\"Enter your name\" autocomplete=\"off\" onChange={getUserData}/>\n\t\t\t\t\t\t\t\t<span className=\"focus-input\"></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"email\" value={user.email} placeholder=\"Enter your email\" autocomplete=\"off\" onChange={getUserData}/>\n\t\t\t\t\t\t\t\t<span className=\"focus-input\"></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<label>Mobile No</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"phone\" value={user.phone} placeholder=\"Enter your phone no\" autocomplete=\"off\" onChange={getUserData}/>\n\t\t\t\t\t\t\t\t<span className=\"focus-input\"></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t<label>Address</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"address\" value={user.address} placeholder=\"Enter your Address\" autocomplete=\"off\" onChange={getUserData}/>\n\t\t\t\t\t\t\t\t<span className=\"focus-input\"></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"form-group textArea\">\n\t\t\t\t\t\t\t\t<label>Address</label>\n\t\t\t\t\t\t\t\t<textarea name=\"message\" value={user.message}  placeholder=\"Enter your Address\" autocomplete=\"off\" onChange={getUserData}/>\n\t\t\t\t\t\t\t\t<span className=\"focus-input\"></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<button onClick={postData}>Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\n}\n\nexport default ReactContact","import React from 'react';\nimport './App.css';\nimport ReactContact from './ReactContact';\n\nfunction App() {\n  return (\n   <>\n      <ReactContact/>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}